%% ===================== system_init_single.m =====================
function LP = single_init_2()


LP.num_q = 21;

LP.m0 = 5;                 % 漂浮基座无质量（固定基）
LP.m = [6.34 6.32 21.93 5.621 2.84 2.211 12.08 6.34 6.32 21.93 5.621 2.84 2.211 12.08 6.34 6.32 21.93 5.621 2.84 2.211 12.08];
LP.mass = 177.026;

I  = cat(3, ...
    [0.0980 -0.0050 -0.0030; -0.0050 0.0450 0.0220; -0.0030 0.0220 0.0720], ...
    [0.0870 -0.0050 -0.0020; -0.0050 0.0210 -0.0220; -0.0020 -0.0220 0.0690], ...
    [0.0790 -0.0020 -0.1200; -0.0020 0.5710 -0.0890; -0.1200 -0.0890 0.5300], ...
    [0.0320 -0.0010 -0.0520; -0.0010 0.3250 -0.0920; -0.0520 -0.0920 0.3130], ...
    [0.0140 -0.0110 -0.0010; -0.0110 0.0100 0.0020; -0.0010 0.0020 0.0110], ...
    [0.0130 -0.0020 -0.0010; -0.0020 0.0090 -0.0010; -0.0010 -0.0010 0.0110], ...
    [0.1510 -0.0020 -0.0030; -0.0020 0.1950 -0.0080; -0.0030 -0.0080 0.0960]);
LP.inertia = zeros(3, 3*21);
for k = 1:21
    Ik = I(:, :, mod(k-1, 7)+1);
    LP.inertia(:, 3*k-2:3*k) = Ik;
end

LP.inertia0 = zeros(3);    % 基座惯性


LP.J_type = repmat('R',1,21); % 旋转关节

LP.BB = [ ...
    0  1  2  3  4  5  6,  ...
    0  8  9  10 11 12 13, ...
    0 15 16 17 18 19 20  ];

LP.S0 = [ ...
    1  0  0  0  0  0  0,  ...
    1  0  0  0  0  0  0, ...
    1  0  0  0  0  0  0  ];

LP.SE = [ ...
    0  0  0  0  0  0  1,  ...
    0  0  0  0  0  0  1, ...
    0  0  0  0  0  0  1  ];

LP.SS=[-1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
    0	-1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
    0	0	-1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
    0	0	0	-1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
    0	0	0	0	-1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
    0	0	0	0	0	-1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	-1	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	-1	1	0	0	0	0	0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0	-1	1	0	0	0	0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0	0	-1	1	0	0	0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0	0	0	-1	1	0	0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0	0	0	0	-1	1	0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0	0	0	0	0	-1	1	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0	0	0	0	0	0	-1	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0	0	0	0	0	0	0	-1	1	0	0	0	0	0;
    0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-1	1	0	0	0	0;
    0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-1	1	0	0	0;
    0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-1	1	0	0;
    0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-1	1	0;
    0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-1	1;
    0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-1];

%% ---------- 质量与惯性 ----------

%% ---------- 向量定义 ----------
% 连杆连接向量（从i到i+1的矢量）
P = [ ...
    0    -0.225   0;
    0    -0.240   0;
    0     0.240   0;
    0.56  0       0.2;
    0.5   0       0.195;
    0    -0.18    0;
    0     0.4216   0]';

% 质心坐标（在各自连杆坐标系中）
Pc = [ ...
    0.003  -0.0621  -0.052;
    0.001   0.060  -0.058;
    0.226   0.005  -0.025;
    0.238   0.001  -0.001;
    0.008  -0.028  -0.031;
   -0.025   0.023   0.003;
    0.003  -0.010  -0.199]';

LP.Qi = [     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0;
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0;
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0];
LP.Qe = [     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0;
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0;
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0];
% 末端位置相对最后一节
E1 = [0; 0.15; 0];
E2 = [0; 0.15; 0];
E3 = [0; 0.15; 0];


%% ---------- SpaceDyn 坐标结构 ----------
LP.cc = zeros(3,21,21);  % 质心位置
LP.c0 = zeros(3,21);    % 基座至每节起点
LP.ce = zeros(3,21);    % 连杆末端相对位置

P01 = rpy2dc(0, 2*pi/3, 0) * [0; 0; 0.25];
P02 = rpy2dc(0, 4*pi/3, 0) * [0; 0; 0.25];
LP.c0(:, 1)  = [0; 0; 0.25];
LP.c0(:, 8)  = P01;
LP.c0(:, 15) = P02;

for i = 1:7
    LP.cc(:,i,i) = Pc(:,i);
    if i < 7
        LP.cc(:,i,i+1) = P(:,i);
    end
end

%% ---------- 姿态初始角 ----------



LP.cc(:, 8:14,  8:14)  = LP.cc(:, 1:7, 1:7);
LP.cc(:, 8:13,  9:14)  = LP.cc(:, 1:6, 2:7);

LP.cc(:, 15:21, 15:21) = LP.cc(:, 1:7, 1:7);
LP.cc(:, 15:20, 16:21) = LP.cc(:, 1:6, 2:7);

LP.ce(:, 7)  =  P(:,7) - Pc(:,7) + E1;
LP.ce(:, 14) =  P(:,7) - Pc(:,7) + E2;
LP.ce(:, 21) =  P(:,7) - Pc(:,7) + E3;

